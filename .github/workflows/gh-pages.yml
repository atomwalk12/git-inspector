# Partially modified from https://github.com/actions/starter-workflows/blob/main/pages/hugo.yml

# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Docs CI

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-22.04
    env:
      HUGO_VERSION: 0.146.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: sbt

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Get Theme
        run: git submodule update --init --recursive

      - name: Update theme to Latest commit
        run: git submodule update --remote --merge

      - name: Generate ScalaDoc for the backend
        run: sbt backend/doc && echo "ScalaDoc generation successful" || (echo "ScalaDoc generation failed" && exit 1)

      - name: Move ScalaDoc to docs/website/public/backend/scaladoc
        run: |
          mkdir -p docs/website/public/backend/scaladoc
          cp -r backend/target/scala-*/api/* docs/website/public/backend/scaladoc

      - name: Generate ScalaDoc for the frontend
        run: sbt frontend/doc && echo "ScalaDoc generation successful" || (echo "ScalaDoc generation failed" && exit 1)

      - name: Move ScalaDoc to docs/website/public/frontend/scaladoc
        run: |
          mkdir -p docs/website/public/frontend/scaladoc
          cp -r frontend/target/scala-*/api/* docs/website/public/frontend/scaladoc

      - name: Generate Scoverage Report
        run: |
          sbt 'set coverageEnabled := true'
          sbt clean coverage "testOnly -- -l gitinsp.tests.tags.ExternalService"
          sbt coverageReport && echo "Scoverage report generation successful" || (echo "Scoverage report generation failed" && exit 1)

      - name: Move Scoverage Report to docs/website/public/backend/coverage
        run: |
          mkdir -p ./docs/website/public/backend/coverage
          cp -r backend/target/scala-*/scoverage-report/* docs/website/public/backend/coverage

      - name: Generate the presentation website to docs/website/public
        run: |
          mkdir -p ./docs/website/public/
          cp -r ./docs/presentation/* ./docs/website/public/

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Install Node.js dependencies
        working-directory: ./docs/website
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        working-directory: ./docs/website
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --buildDrafts --gc \
            --destination public/process \
            --baseURL "${{ steps.pages.outputs.base_url }}/process/" \

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/website/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    needs: build
    # if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'  Condition for main branch or manual trigger
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4